<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<bean id="random" class="random.rndResultats"/>
	<bean id="splitterUri" class="uriHeader.splitter"/>
	<bean id="jsonResult" class="jsonResult.totals"/>

	<camelContext id="simulador21d"
		xmlns="http://camel.apache.org/schema/blueprint" useMDCLogging="true">

		<propertyPlaceholder id="properties"
							 location="classpath:/etc/uri.properties" xmlns="http://camel.apache.org/schema/blueprint" />

		<streamCaching id="CacheConfig" bufferSize="100024000"
			spoolThreshold="100024000" />

		<dataFormats>
			<json id="json" library="Jackson" />
			<bindy id="csv" type="Csv" classType="csv.Resultats"/>
		</dataFormats>

		<route autoStartup="false" id="randomResultats" streamCache="true">
			<from uri="{{origen}}"/>
			<unmarshal ref="csv"/>
			<process ref="random"/>
			<marshal ref="json"/>
			<log message="${headers.CamelFileParent}"/>
			<toD uri="file:${headers.CamelFileParent}?fileName=totals.txt"/>
			<to uri="mock:result"/>
		</route>

		<route autoStartup="true" id="Resultats2elastic" streamCache="true">
			<from uri="{{resultats}}"/>
			<unmarshal>
				<csv delimiter=";" />
			</unmarshal>
			<bean ref="splitterUri"/>
			<!--<bean ref="jsonResult"/>-->
			<setBody>
				<simple>{"provincia":"${headers.provincia}","municipi":"${headers.municipi}","collegi":"${headers.collegi}","mesa":"${headers.mesa}","${body[2][0]}":${body[2][1]},"${body[3][0]}":${body[3][1]},"${body[4][0]}":${body[4][1]},"${body[5][0]}":${body[5][1]},"${body[6][0]}":${body[6][1]},"${body[7][0]}":${body[7][1]},"${body[8][0]}":${body[8][1]},"${body[9][0]}":${body[9][1]},"${body[10][0]}":${body[10][1]},"${body[11][0]}":${body[11][1]},"${body[12][0]}":${body[12][1]},"${body[13][0]}":${body[13][1]},"${body[14][0]}":${body[14][1]}}</simple>
			</setBody>
			<log message="${body}"/>
			<setHeader headerName="indexName"><simple>21d-${date:now:yyyy-MM-dd}</simple></setHeader>
			<to uri="{{elasticsearch}}"/>
		</route>

	</camelContext>
</blueprint>